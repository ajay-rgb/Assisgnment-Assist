[
  {
    "text": "I need a React-based frontend for an \"Assignment Checker\" application. The backend and AI integrations will be handled by another team, so focus only on creating the UI components and layouts described below. Use modern React practices (e.g., functional components, hooks) and ensure the design is clean, responsive, and user-friendly.\r\n\r\n### **Key Pages and Features**\r\n\r\n1. **Home Page**\r\n   - **Navigation Bar**:\r\n     - Left side: Logo (placeholder image or text).\r\n     - Right side: Buttons for \"Home,\" \"About Us,\" and \"Contact Us.\"\r\n   - **Content Section**:\r\n     - Left side:\r\n       - Title: \"Assignment Checker.\"\r\n       - Tagline: A short description like \"Automated grading and plagiarism detection for students and teachers.\"\r\n     - Right side:\r\n       - Two buttons: \"Teacher Login\" and \"Student Login.\"\r\n\r\n2. **Teacher Dashboard (Post Login)**  \r\n   After selecting \"Teacher Login,\" the teacher sees the following options:\r\n   - **Assignment Upload**:\r\n     - Button to upload assignments (file input).\r\n   - **Assignment Evaluation**:\r\n     - Option to manually check assignments.\r\n     - Option to evaluate assignments using AI (button triggers backend API call).\r\n     - Grade field: Automatically updated if evaluated via AI; editable for manual grading.\r\n   - **Plagiarism Detection**:\r\n     - Display plagiarism percentage for each uploaded assignment.\r\n     - If plagiarism exceeds 60%, flag the assignment with a visual indicator (e.g., red badge) and disable further evaluation options.\r\n   - **Class Performance Overview**:\r\n     - Table or chart showing:\r\n       - Student names.\r\n       - Grades.\r\n       - Plagiarism percentages.\r\n       - Other relevant details (e.g., submission status).\r\n\r\n3. **Student Dashboard (Post Login)**  \r\n   After selecting \"Student Login,\" the student sees the following options:\r\n   - **Pending Assignments**:\r\n     - List of assignments uploaded by the teacher.\r\n     - Each assignment has:\r\n       - Title.\r\n       - Deadline (if applicable).\r\n       - Button to upload submission (file input or code paste area).\r\n   - **Uploaded Assignments**:\r\n     - List of assignments submitted by the student.\r\n     - Show assignment title, submission status, grade (if available), and plagiarism percentage.\r\n   - **Doubt/Question Section**:\r\n     - Textbox for students to type their questions/doubts.\r\n     - Submit button to send the question to the AI for answers (API integration placeholder).\r\n\r\n4. **General Requirements**\r\n   - Use React Router for navigation between pages (e.g., Home, Teacher Dashboard, Student Dashboard).\r\n \r\n   - Include placeholder data/mockups for all dynamic content (e.g., assignments, grades, etc.).\r\n   - Use CSS frameworks like TailwindCSS or Material-UI for styling if possible.\r\n\r\n\r\n\r\nkeep a minimal user friendly and aesthetically pleasing design, i also want to place a supporting image on my home page in center so make sure to make space for that",
    "id": "1744551811278",
    "createdAt": "2025-04-13T13:43:31.278Z",
    "updatedAt": "2025-04-13T13:43:31.278Z"
  },
  {
    "text": "I need a React-based frontend for an \"Assignment Checker\" application. The backend and AI integrations will be handled by another team, so focus only on creating the UI components and layouts described below. Use modern React practices (e.g., functional components, hooks) and ensure the design is clean, responsive, and user-friendly.\r\n\r\n### **Key Pages and Features**\r\n\r\n1. **Home Page**\r\n   - **Navigation Bar**:\r\n     - Left side: Logo (placeholder image or text).\r\n     - Right side: Buttons for \"Home,\" \"About Us,\" and \"Contact Us.\"\r\n   - **Content Section**:\r\n     - Left side:\r\n       - Title: \"Assignment Checker.\"\r\n       - Tagline: A short description like \"Automated grading and plagiarism detection for students and teachers.\"\r\n     - Right side:\r\n       - Two buttons: \"Teacher Login\" and \"Student Login.\"\r\n\r\n2. **Teacher Dashboard (Post Login)**  \r\n   After selecting \"Teacher Login,\" the teacher sees the following options:\r\n   - **Assignment Upload**:\r\n     - Button to upload assignments (file input).\r\n   - **Assignment Evaluation**:\r\n     - Option to manually check assignments.\r\n     - Option to evaluate assignments using AI (button triggers backend API call).\r\n     - Grade field: Automatically updated if evaluated via AI; editable for manual grading.\r\n   - **Plagiarism Detection**:\r\n     - Display plagiarism percentage for each uploaded assignment.\r\n     - If plagiarism exceeds 60%, flag the assignment with a visual indicator (e.g., red badge) and disable further evaluation options.\r\n   - **Class Performance Overview**:\r\n     - Table or chart showing:\r\n       - Student names.\r\n       - Grades.\r\n       - Plagiarism percentages.\r\n       - Other relevant details (e.g., submission status).\r\n\r\n3. **Student Dashboard (Post Login)**  \r\n   After selecting \"Student Login,\" the student sees the following options:\r\n   - **Pending Assignments**:\r\n     - List of assignments uploaded by the teacher.\r\n     - Each assignment has:\r\n       - Title.\r\n       - Deadline (if applicable).\r\n       - Button to upload submission (file input or code paste area).\r\n   - **Uploaded Assignments**:\r\n     - List of assignments submitted by the student.\r\n     - Show assignment title, submission status, grade (if available), and plagiarism percentage.\r\n   - **Doubt/Question Section**:\r\n     - Textbox for students to type their questions/doubts.\r\n     - Submit button to send the question to the AI for answers (API integration placeholder).\r\n\r\n4. **General Requirements**\r\n   - Use React Router for navigation between pages (e.g., Home, Teacher Dashboard, Student Dashboard).\r\n \r\n   - Include placeholder data/mockups for all dynamic content (e.g., assignments, grades, etc.).\r\n   - Use CSS frameworks like TailwindCSS or Material-UI for styling if possible.\r\n\r\n\r\n\r\nkeep a minimal user friendly and aesthetically pleasing design, i also want to place a supporting image on my home page in center so make sure to make space for that",
    "id": "1744551790539",
    "createdAt": "2025-04-13T13:43:10.539Z",
    "updatedAt": "2025-04-13T13:43:10.540Z"
  }
]